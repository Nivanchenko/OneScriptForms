// В справке есть тесты для свойств на каждой странице свойства, если оно не наследуется
// для тех которые наследуются написан этот скрипт
// рабочий файл для моего компа, универсальности не придавал

Перем Ф, ТекстТеста, СтрКода0, СписокСообщений;
Перем СписокОшибок;

Функция Команда(ИмяФайла, Аргументы, Объект)
	ИнформацияЗапускаПроцесса1 = Ф.ИнформацияЗапускаПроцесса();
	ИнформацияЗапускаПроцесса1.ИмяФайла = ИмяФайла;
	ИнформацияЗапускаПроцесса1.Аргументы = Аргументы;
	ИнформацияЗапускаПроцесса1.СоздатьБезОкна = Истина;
	ИнформацияЗапускаПроцесса1.ИспользоватьОболочку = Ложь;
	ИнформацияЗапускаПроцесса1.СтильОкна = Ф.СтильОкнаПроцесса.Скрытое;
	ИнформацияЗапускаПроцесса1.ПеренаправитьСтандартныйВывод = Истина;
	
	КлассОшибки = СтрЗаменить(Аргументы, "C:\444\ТестированиеВсех\", "");
	КлассОшибки = СтрЗаменить(КлассОшибки, ".os", "");
	КлассОшибки = СтрЗаменить(КлассОшибки, "(", " (");

	Процесс1 = Ф.Процесс();
	Процесс1.НачальнаяИнформация = ИнформацияЗапускаПроцесса1;
	Процесс1.Начать();
	ВыводитьСтроки = Ложь;
	Если Не Процесс1.Завершен Тогда
		Стр1 = Процесс1.СтандартныйВывод.ПрочитатьСтроку();
		Если Стр1 = "---Не прошли тест свойства:---" Тогда
			ВыводитьСтроки = Истина;
		КонецЕсли;
		Если ВыводитьСтроки Тогда
			Сообщить("" + Стр1);
		КонецЕсли;
		
		Пока Стр1 <> Неопределено Цикл
			Если Стр1 <> "Тест завершен." Тогда
				ДваПоследнихСимвола = Прав(Стр1, 2);
				ПервыйСимвол = Лев(Стр1, 1);
				Если ПервыйСимвол = "{" Тогда
					СписокОшибок.Добавить(Стр1);
					ТекстДокХХХ = Новый ТекстовыйДокумент;
					ТекстДокХХХ.Прочитать("C:\444\ОшибкиТестаСвойств.txt");
					ТекстДокХХХ.ДобавитьСтроку(Стр1);
					ТекстДокХХХ.ДобавитьСтроку("===============================================");
					ТекстДокХХХ.Записать("C:\444\ОшибкиТестаСвойств.txt");
				ИначеЕсли Не (ДваПоследнихСимвола = ".)") и (  (Не (ДваПоследнихСимвола = "=="))  и  (Не (ДваПоследнихСимвола = "--"))  ) Тогда
					СписокОшибок.Добавить("" + КлассОшибки + " - свойство - " + Стр1);
				КонецЕсли;
				Объект.ДобавитьТекст("" + Стр1 + Символы.ПС);
			КонецЕсли;
			Стр1 = Процесс1.СтандартныйВывод.ПрочитатьСтроку();
			
			Если Стр1 = "---Не прошли тест свойства:---" Тогда
				ВыводитьСтроки = Истина;
			КонецЕсли;
			Если ВыводитьСтроки Тогда
				Если Стр1 <> "Тест завершен." Тогда
					Сообщить("" + Стр1);
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		Объект.ДобавитьТекст("Процесс1 завершен");
	КонецЕсли;
КонецФункции

Функция СтрНайтиМежду(СтрПараметр, Фрагмент1 = Неопределено, Фрагмент2 = Неопределено, ИсключитьФрагменты = Истина, БезНаложения = Истина)
	//Стр - исходная строка
	//Фрагмент1 - подстрока поиска от которой ведем поиск
	//Фрагмент2 - подстрока поиска до которой ведем поиск
	//ИсключитьФрагменты - не включать Фрагмент1 и Фрагмент2 в результат
	//БезНаложения - в результат не будут включены участки, содержащие другие найденные участки, удовлетворяющие переданным параметрам
	//функция возвращает массив строк
	Стр = СтрПараметр;
	М = Новый Массив;
	Если (Фрагмент1 <> Неопределено) и (Фрагмент2 = Неопределено) Тогда
		Позиция = Найти(Стр, Фрагмент1);
		Пока Позиция > 0 Цикл
			М.Добавить(?(ИсключитьФрагменты, Сред(Стр, Позиция + СтрДлина(Фрагмент1)), Сред(Стр, Позиция)));
			Стр = Сред(Стр, Позиция + 1);
			Позиция = Найти(Стр, Фрагмент1);
		КонецЦикла;
	ИначеЕсли (Фрагмент1 = Неопределено) и (Фрагмент2 <> Неопределено) Тогда
		Позиция = Найти(Стр, Фрагмент2);
		СуммаПозиций = Позиция;
		Пока Позиция > 0 Цикл
			М.Добавить(?(ИсключитьФрагменты, Сред(Стр, 1, СуммаПозиций - 1), Сред(Стр, 1, СуммаПозиций - 1 + СтрДлина(Фрагмент2))));
			Позиция = Найти(Сред(Стр, СуммаПозиций + 1), Фрагмент2);
			СуммаПозиций = СуммаПозиций + Позиция;
		КонецЦикла;
	ИначеЕсли (Фрагмент1 <> Неопределено) и (Фрагмент2 <> Неопределено) Тогда
		Позиция = Найти(Стр, Фрагмент1);
		Пока Позиция > 0 Цикл
			Стр2 = ?(ИсключитьФрагменты, Сред(Стр, Позиция + СтрДлина(Фрагмент1)), Сред(Стр, Позиция));
			Позиция2 = Найти(Стр2, Фрагмент2);
			СуммаПозиций2 = Позиция2;
			Пока Позиция2 > 0 Цикл
				Если БезНаложения Тогда
					Если Найти(Сред(Стр2, 1, СуммаПозиций2 - 1), Фрагмент2) = 0 Тогда
						М.Добавить("" + ?(ИсключитьФрагменты, Сред(Стр2, 1, СуммаПозиций2 - 1), Сред(Стр2, 1, СуммаПозиций2 - 1 + СтрДлина(Фрагмент2))));
					КонецЕсли;
				Иначе
					М.Добавить("" + ?(ИсключитьФрагменты, Сред(Стр2, 1, СуммаПозиций2 - 1), Сред(Стр2, 1, СуммаПозиций2 - 1 + СтрДлина(Фрагмент2))));
				КонецЕсли;
				Позиция2 = Найти(Сред(Стр2, СуммаПозиций2 + 1), Фрагмент2);
				СуммаПозиций2 = СуммаПозиций2 + Позиция2;
			КонецЦикла;
			Стр = Сред(Стр, Позиция + 1);
			Позиция = Найти(Стр, Фрагмент1);
		КонецЦикла;
	КонецЕсли;
	
	Возврат М;
КонецФункции

Функция ПолучитьОбъект(КлассРус, КлассАнгл)
	// Тестируются только те свойства или методы, которые наследуются от родителя.
	// остальные можно протестировать из тестового кода в справке

	Если (КлассАнгл = "FileDialog") или 
		(КлассАнгл = "ScrollBar") или 
		(КлассАнгл = "Control") или 
		(КлассАнгл = "ListControl") или 
		(КлассАнгл = "ContainerControl") или 
		(КлассАнгл = "UpDownBase") или 
		(КлассАнгл = "ScrollableControl") или 
		(КлассАнгл = "TextBoxBase") или 
		(КлассАнгл = "ButtonBase") или 
		(КлассАнгл = "CommonDialog") или 
		(КлассАнгл = "EventArgs") или 
		(КлассАнгл = "BitmapData") или 
		(КлассАнгл = "Brush") Тогда // базовые классы
		Возврат Ложь;
		
	ИначеЕсли (КлассАнгл  = "ProgressBar") Тогда 
		СтрКода0 = "" + КлассРус + "1 = Ф.Индикатор(Ложь);";
	ИначеЕсли (КлассАнгл  = "DataGridTextBox") Тогда //ПолеВводаКолонки(DataGridTextBox)
		СтрКода0 = "СтильКолонки1 = Ф.СтильКолонкиПолеВвода();
		|" + КлассРус + "1 = СтильКолонки1.ПолеВвода;";
	ИначеЕсли (КлассАнгл  = "NotifyIcon") Тогда
		Форма1 = Ф.Форма();
		Форма1.Отображать = Истина;
		Форма1.Показать();
		// МенюЗначкаУведомления2 = Ф.МенюЗначкаУведомления();
		СтрКода0 = "МенюЗначкаУведомления1 = Ф.МенюЗначкаУведомления();" + Символы.ПС;
		СтрКода0 = СтрКода0 + "" + КлассРус + "1 = Ф.ЗначокУведомления(МенюЗначкаУведомления1);";//ЗначокУведомления(<Меню>)
	ИначеЕсли (КлассАнгл = "ComboBoxObjectCollection") Тогда // нет конструктора ЭлементыПоляВыбора (ComboBoxObjectCollection)
		СтрКода0 = "" + КлассРус + "1 = Ф.ПолеВыбора().Элементы;";//нет конструктора
	ИначеЕсли (КлассАнгл = "ControlCollection") Тогда // нет конструктора ЭлементыУправления(ControlCollection)
		СтрКода0 = "" + КлассРус + "1 = Форма1.ЭлементыУправления;";//нет конструктора
	ИначеЕсли (КлассАнгл = "MenuNotifyIcon") Тогда // МенюЗначкаУведомления (MenuNotifyIcon)
		ТекстТеста = "
		|Перем Ф, МенюЗначкаУведомления1;
		|
		|Процедура МенюЗначкаУведомления1_ПриПоявлении()
		|    Если МенюЗначкаУведомления1.ПервыйПоказ Тогда
		|        // Делаем невидимым первое появление меню значка уведомления. Задаем всем пунктам меню значение свойства <Отображать> равным <Ложь>.
		|        // Из-за особенностей работы библиотеки OneScriptForms.System.dll появление меню, при создании значка уведомления, обязательно.
		|        // Тоесть вызов меню происходит программно, а не по щелчку правой кнопкой мыши на значке уведомления.
		|        МенюЗначкаУведомления1.ПервыйПоказ = Ложь;
		|        Для А = 0 По МенюЗначкаУведомления1.ЭлементыМеню.Количество - 1 Цикл
		|            МенюЗначкаУведомления1.ЭлементМеню(А).Отображать = Ложь;
		|        КонецЦикла;
		|    Иначе
		|        // Это второе и последующие появления меню значка уведомления, происходящие уже при щелчке правой кнопкой мыши на значке уведомления.
		|        // Здесь можно управлять составом видимого меню для значка уведомления.
		|        // Задаем пунктам меню нужное нам значение свойства <Отображать>.
		|        Для А = 0 По МенюЗначкаУведомления1.ЭлементыМеню.Количество - 1 Цикл
		|            МенюЗначкаУведомления1.ЭлементМеню(А).Отображать = Истина;
		|        КонецЦикла;
		|    КонецЕсли;
		|КонецПроцедуры
		|
		|ПодключитьВнешнююКомпоненту(""C:\444\111\OneScriptForms\OneScriptForms\bin\Debug\OneScriptForms.dll"");
		|Ф = Новый ФормыДляОдноСкрипта();
		|Форма1 = Ф.Форма();
		|Форма1.СостояниеОкна = Ф.СостояниеОкнаФормы.Свернутое;
		|Форма1.Отображать = Истина;
		|Форма1.Показать();
		|
		|МенюЗначкаУведомления1 = Ф.МенюЗначкаУведомления();
		|МенюЗначкаУведомления1.ПриПоявлении = ""МенюЗначкаУведомления1_ПриПоявлении()"";
		|ЗначокУведомления1 = Ф.ЗначокУведомления(МенюЗначкаУведомления1);
		|
		|НекорректныеСвойства = Новый СписокЗначений;
		|
		|Попытка
		|	Сообщить(""МенюЗначкаУведомления1.ЭлементыМеню = "" + МенюЗначкаУведомления1.ЭлементыМеню + "" (Тип: ЭлементыМеню (MenuItemCollection).)(Только чтение.)"");
		|
		|Исключение НекорректныеСвойства.Добавить(""ЭлементыМеню (MenuItems)""); КонецПопытки;
		|
		|Если НекорректныеСвойства.Количество() > 0 Тогда
		|	Сообщить(""---Не прошли тест свойства:---"");
		|КонецЕсли;
		|Для А = 0 По НекорректныеСвойства.Количество() - 1 Цикл
		|	Сообщить("""" + НекорректныеСвойства.Получить(А).Значение);
		|КонецЦикла;
		|
		|Если НекорректныеСвойства.Количество() > 0 Тогда
		|	ТекстДокХХХ = Новый ТекстовыйДокумент;
		|	ТекстДокХХХ.Прочитать(""C:\444\ОшибкиТестаСвойств.txt"");
		|	ТекстДокХХХ.ДобавитьСтроку(Новый Файл(ТекущийСценарий().Источник).Имя);
		|	Для А = 0 По НекорректныеСвойства.Количество() - 1 Цикл
		|		ТекстДокХХХ.ДобавитьСтроку("""" + Символы.Таб + НекорректныеСвойства.Получить(А).Значение);
		|	КонецЦикла;
		|	ТекстДокХХХ.ДобавитьСтроку(""==============================================="");
		|	ТекстДокХХХ.Записать(""C:\444\ОшибкиТестаСвойств.txt"");
		|КонецЕсли;
		|Сообщить(""Тест завершен."");
		|Сообщить(""==============================================="");
		|Форма1.Закрыть();
		|
		|Форма1.Текст = ""Тест МенюЗначкаУведомления(MenuNotifyIcon)"";
		|Пока Ф.Продолжать Цикл
		|	Выполнить(Ф.ПолучитьСобытие());
		|КонецЦикла;
		|";
		ТекстДокХХХ = Новый ТекстовыйДокумент;
		ТекстДокХХХ.УстановитьТекст(ТекстТеста);
		ТекстДокХХХ.Записать("C:\444\Тестирование\" + КлассРус + "(" + КлассАнгл + ").os");
		ТекстДокХХХ.Записать("C:\444\ТестированиеВсех\" + КлассРус + "(" + КлассАнгл + ").os");
		Возврат Ложь;
	ИначеЕсли (КлассАнгл = "ContextMenu") Тогда // КонтекстноеМеню(ContextMenu)
		СтрКода0 = "
		|КонтекстноеМеню1 = Ф.КонтекстноеМеню();
		|ЭлементМеню1 = КонтекстноеМеню1.ЭлементыМеню.Добавить(Ф.ЭлементМеню(""Первый элемент меню""));
		|ЭлементМеню2 = КонтекстноеМеню1.ЭлементыМеню.Добавить(Ф.ЭлементМеню(""Второй элемент меню""));
		|ЭлементМеню3 = КонтекстноеМеню1.ЭлементыМеню.Добавить(Ф.ЭлементМеню(""Третий элемент меню""));
		|Надпись1 = Форма1.ЭлементыУправления.Добавить(Ф.Надпись());
		|Надпись1.Текст = ""Надпись с контекстным меню"";
		|Надпись1.Лево = 10;
		|Надпись1.Верх = 10;
		|Надпись1.Ширина = 200;
		|Надпись1.Высота = 100;
		|Надпись1.СтильГраницы = Ф.СтильГраницы.Трехмерная;
		|Надпись1.КонтекстноеМеню = КонтекстноеМеню1;
		|КонтекстноеМеню1.Показать(Надпись1, Ф.Точка(5, 5));
		|";
	ИначеЕсли (КлассАнгл = "GridColumnStylesCollection") Тогда // СтилиКолонкиСеткиДанных (GridColumnStylesCollection)
		СтрКода0 = "
		|СтильТаблицыСеткиДанных1 = Ф.СтильТаблицыСеткиДанных();
		|СтилиКолонкиСеткиДанных1 = СтильТаблицыСеткиДанных1.СтилиКолонкиСеткиДанных;
		|";
	ИначеЕсли (КлассАнгл = "ComboBox") Тогда
		СтрКода0 = "
		|ПолеВыбора1 = Форма1.ЭлементыУправления.Добавить(Ф.ПолеВыбора());
		|
		|ТаблицаДанных1 = Ф.ТаблицаДанных();
		|ТаблицаДанных1.ИмяТаблицы = ""ТД1"";
		|Колонка1 = ТаблицаДанных1.Колонки.Добавить(Ф.КолонкаДанных(""Отображение_Элемента"", Ф.ТипДанных.Строка));
		|Колонка2 = ТаблицаДанных1.Колонки.Добавить(Ф.КолонкаДанных(""Значение_элемента"", Ф.ТипДанных.Строка));
		|ТекСтрока = ТаблицаДанных1.Строки.Добавить(ТаблицаДанных1.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка1"");
		|ТекСтрока.УстановитьЭлемент(1, ""Строка1"");
		|ТекСтрока = ТаблицаДанных1.Строки.Добавить(ТаблицаДанных1.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка2"");
		|ТекСтрока.УстановитьЭлемент(1, ""Строка2"");		
		|
		|ПолеВыбора1.ОтображениеЭлемента = ""Отображение_Элемента"";
		|ПолеВыбора1.ЗначениеЭлемента  = ""Значение_элемента"";
		|ПолеВыбора1.ИсточникДанных = ТаблицаДанных1;  
		|
		|ПолеВыбора1.ИндексВыбранного = 0;
		|";
	ИначеЕсли (КлассАнгл = "GridTableStylesCollection") Тогда // СтилиТаблицыСеткиДанных (GridTableStylesCollection)
		СтрКода0 = "" + КлассРус + "1 = Ф.СеткаДанных().СтилиТаблицы;";//нет конструктора
	ИначеЕсли (КлассАнгл = "ImageCollection") Тогда // Изображения (ImageCollection)
		СтрКода0 = "" + КлассРус + "1 = Ф.СписокИзображений().Изображения;";//нет конструктора
	ИначеЕсли (КлассАнгл = "ListBoxObjectCollection") Тогда // ЭлементыПоляСписка (ListBoxObjectCollection)
		СтрКода0 = "" + КлассРус + "1 = Ф.ПолеСписка().Элементы;";//нет конструктора
	ИначеЕсли (КлассАнгл = "ListViewItemCollection") Тогда // ЭлементыСпискаЭлементов (ListViewItemCollection)
		СтрКода0 = "" + КлассРус + "1 = Ф.СписокЭлементов().Элементы;";//нет конструктора
	ИначеЕсли (КлассАнгл = "MenuItemCollection") Тогда // ЭлементыМеню (MenuItemCollection)
		СтрКода0 = "" + КлассРус + "1 = Ф.КонтекстноеМеню().ЭлементыМеню;";//нет конструктора
	ИначеЕсли (КлассАнгл = "ToolBarButtonCollection") Тогда // КнопкиПанелиИнструментов (ToolBarButtonCollection)
		СтрКода0 = "" + КлассРус + "1 = Ф.ПанельИнструментов().Кнопки;";//нет конструктора
	ИначеЕсли (КлассАнгл = "TreeNodeCollection") Тогда // УзлыДерева (TreeNodeCollection)
		СтрКода0 = "" + КлассРус + "1 = Ф.Дерево().Узлы;";//нет конструктора
	ИначеЕсли (КлассАнгл = "ListBoxSelectedIndexCollection") Тогда // ИндексыВыбранныхПоляСписка (ListBoxSelectedIndexCollection)
		СтрКода0 = "
		|ПолеСписка1 = Форма1.ЭлементыУправления.Добавить(Ф.ПолеСписка());
		|ПолеСписка1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|ПолеСписка1.РежимВыбора = Ф.РежимВыбора.МножественныйПростой;
		|ПолеСпискаЭлементы1 = ПолеСписка1.Элементы;
		|Для А = 1 По 10 Цикл
		|	ПолеСписка1.Элементы.Добавить(""Элемент"" + А);
		|КонецЦикла;
		|ПолеСписка1.ВыбранныйЭлемент = ПолеСпискаЭлементы1.Элемент(0);
		|ПолеСписка1.ВыбранныйЭлемент = ПолеСпискаЭлементы1.Элемент(1);
		|ПолеСписка1.ВыбранныйЭлемент = ПолеСпискаЭлементы1.Элемент(3);
		|
		|ИндексыВыбранныхПоляСписка1 = ПолеСписка1.ИндексыВыбранных;
		|";
	ИначеЕсли (КлассАнгл = "ListBoxSelectedObjectCollection") Тогда // ВыбранныеЭлементыПоляСписка (ListBoxSelectedObjectCollection)
		СтрКода0 = "
		|ПолеСписка1 = Форма1.ЭлементыУправления.Добавить(Ф.ПолеСписка());
		|ПолеСписка1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|ПолеСписка1.РежимВыбора = Ф.РежимВыбора.МножественныйПростой;
		|ПолеСпискаЭлементы1 = ПолеСписка1.Элементы;
		|Для А = 1 По 10 Цикл
		|	ПолеСписка1.Элементы.Добавить(""Элемент"" + А);
		|КонецЦикла;
		|ПолеСписка1.ВыбранныйЭлемент = ПолеСпискаЭлементы1.Элемент(0);
		|ПолеСписка1.ВыбранныйЭлемент = ПолеСпискаЭлементы1.Элемент(1);
		|ПолеСписка1.ВыбранныйЭлемент = ПолеСпискаЭлементы1.Элемент(3);
		|
		|ВыбранныеЭлементыПоляСписка1 = ПолеСписка1.ВыбранныеЭлементы;
		|";
	ИначеЕсли (КлассАнгл = "ListViewCheckedItemCollection") Тогда // ОтмеченныеЭлементыСпискаЭлементов (ListViewCheckedItemCollection)
		СтрКода0 = "
		|СписокЭлементов1 = Форма1.ЭлементыУправления.Добавить(Ф.СписокЭлементов());
		|СписокЭлементов1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|СписокЭлементов1.Флажки = Истина;
		|СписокЭлементов1.РежимОтображения = Ф.РежимОтображения.Подробно;
		|СписокЭлементов1.МножественныйВыбор = Истина;
		|
		|СписокЭлементов1.Колонки.Добавить(Ф.Колонка(""Номер"", 70, Ф.ГоризонтальноеВыравнивание.Лево));
		|Элементы1 = СписокЭлементов1.Элементы;
		|Для А = 1 По 10 Цикл
		|	Элементы1.Добавить(Ф.ЭлементСпискаЭлементов("""" + А));
		|КонецЦикла;
		|Элементы1.Элемент(1).Помечен = Истина;
		|Элементы1.Элемент(3).Помечен = Истина;
		|Элементы1.Элемент(4).Помечен = Истина;
		|
		|ПомеченныеЭлементыСпискаЭлементов1 = СписокЭлементов1.ПомеченныеЭлементы;
		|";
	ИначеЕсли (КлассАнгл = "ListViewSelectedItemCollection") Тогда // ВыбранныеЭлементыСпискаЭлементов (ListViewSelectedItemCollection)
		СтрКода0 = "
		|СписокЭлементов1 = Форма1.ЭлементыУправления.Добавить(Ф.СписокЭлементов());
		|СписокЭлементов1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|СписокЭлементов1.Флажки = Истина;
		|СписокЭлементов1.РежимОтображения = Ф.РежимОтображения.Подробно;
		|СписокЭлементов1.МножественныйВыбор = Истина;
		|
		|СписокЭлементов1.Колонки.Добавить(Ф.Колонка(""Номер"", 70, Ф.ГоризонтальноеВыравнивание.Лево));
		|Элементы = СписокЭлементов1.Элементы;
		|Для А = 1 По 10 Цикл
		|	Элементы.Добавить(Ф.ЭлементСпискаЭлементов("""" + А));
		|КонецЦикла;
		|Элементы.Элемент(1).Выбран = Истина;
		|Элементы.Элемент(3).Выбран = Истина;
		|Элементы.Элемент(4).Выбран = Истина;
		|
		|СписокЭлементов1.Фокус();
		|
		|ВыбранныеЭлементыСпискаЭлементов1 = СписокЭлементов1.ВыбранныеЭлементы;
		|";
	ИначеЕсли (КлассАнгл = "ListViewColumnHeaderCollection") Тогда // ЗаголовкиКолонокСпискаЭлементов (ListViewColumnHeaderCollection)
		СтрКода0 = "
		|СписокЭлементов1 = Форма1.ЭлементыУправления.Добавить(Ф.СписокЭлементов());
		|СписокЭлементов1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|СписокЭлементов1.Флажки = Истина;
		|СписокЭлементов1.РежимОтображения = Ф.РежимОтображения.Подробно;
		|СписокЭлементов1.МножественныйВыбор = Истина;
		|
		|СписокЭлементов1.Колонки.Добавить(Ф.Колонка(""Номер"", 70, Ф.ГоризонтальноеВыравнивание.Лево));
		|Элементы = СписокЭлементов1.Элементы;
		|Для А = 1 По 10 Цикл
		|	Элементы.Добавить(Ф.ЭлементСпискаЭлементов("""" + А));
		|КонецЦикла;
		|Элементы.Элемент(1).Выбран = Истина;
		|Элементы.Элемент(3).Выбран = Истина;
		|Элементы.Элемент(4).Выбран = Истина;
		|
		|Колонки1 = СписокЭлементов1.Колонки;
		|";
	ИначеЕсли (КлассАнгл = "ListViewSubItemCollection") Тогда // ПодэлементыСпискаЭлементов (ListViewSubItemCollection)
		СтрКода0 = "
		|Форма1.Ширина = 400;
		|СписокЭлементов1 = Форма1.ЭлементыУправления.Добавить(Ф.СписокЭлементов());
		|СписокЭлементов1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|СписокЭлементов1.РежимОтображения = Ф.РежимОтображения.Подробно;
		|Колонки1 = СписокЭлементов1.Колонки;
		|Колонки1.Добавить(Ф.Колонка(""Имя цвета"", 200, Ф.ГоризонтальноеВыравнивание.Центр));
		|Колонки1.Добавить(Ф.Колонка(""R"", 40, 1));
		|Колонки1.Добавить(Ф.Колонка(""G"", 40, 1));
		|Колонки1.Добавить(Ф.Колонка(""B"", 40, 1));
		|	
		|Элементы = СписокЭлементов1.Элементы;
		|Элемент1 = Ф.ЭлементСпискаЭлементов(Ф.Цвет().Красный.Имя);
		|Элементы.Добавить(Элемент1);
		|ПодэлементыСпискаЭлементов1 = Элемент1.Подэлементы;
		|ПодэлементыСпискаЭлементов1.Добавить(Ф.ПодэлементСпискаЭлементов(255));
		|ПодэлементыСпискаЭлементов1.Добавить(Ф.ПодэлементСпискаЭлементов(0));
		|ПодэлементыСпискаЭлементов1.Добавить(Ф.ПодэлементСпискаЭлементов(0));
		|";
	ИначеЕсли (КлассАнгл = "StatusBarPanelCollection") Тогда // ПанелиСтрокиСостояния (StatusBarPanelCollection)
		СтрКода0 = "
		|СтрокаСостояния1 = Ф.СтрокаСостояния();
		|СтрокаСостояния1.Родитель = Форма1;
		|СтрокаСостояния1.ПоказатьПанели = Истина;
		|ПанелиСтрокиСостояния1 = СтрокаСостояния1.Панели;
		|";
	ИначеЕсли (КлассАнгл = "Form") Тогда // Форма (Form)
		СтрКода0 = "
		|Форма2 = Ф.Форма();
		|Форма2.Отображать = Истина;
		|Форма2.Показать();
		|Форма1.Родитель = Форма2;
		|Форма1.Владелец = Форма2;
		|		
		|Кнопка1 = Форма1.ЭлементыУправления.Добавить(Ф.Кнопка());
		|Форма1.АктивныйЭлемент = Кнопка1;
		|Форма1.КнопкаОтмена = Кнопка1;
		|Форма1.КнопкаПринять = Кнопка1;
		|";
	ИначеЕсли (КлассАнгл = "TreeView") Тогда // Дерево (TreeView)
		СтрКода0 = "
		|Дерево1 = Форма1.ЭлементыУправления.Добавить(Ф.Дерево());
		|Узел1 = Дерево1.Узлы.Добавить(""Узел1"");
		|Дерево1.ВыбранныйУзел = Узел1;
		|";
	ИначеЕсли (КлассАнгл = "UserControl") Тогда // ПользовательскийЭлементУправления (UserControl)
		СтрКода0 = "
		|ПользовательскийЭлементУправления1 = Ф.ПользовательскийЭлементУправления();
		|ПользовательскийЭлементУправления1.Значение = Ф.Цвет().Синий;
		|Кнопка1 = ПользовательскийЭлементУправления1.ЭлементыУправления.Добавить(Ф.Кнопка());
		|ПользовательскийЭлементУправления1.АктивныйЭлемент = Кнопка1;
		|";
	ИначеЕсли (КлассАнгл = "NumericUpDown") Тогда // РегуляторВверхВниз (NumericUpDown)
		СтрКода0 = "
		|РегуляторВверхВниз1 = Ф.РегуляторВверхВниз();
		|Кнопка1 = РегуляторВверхВниз1.ЭлементыУправления.Добавить(Ф.Кнопка());
		|РегуляторВверхВниз1.АктивныйЭлемент = Кнопка1;
		|";
	ИначеЕсли (КлассАнгл = "ListBox") Тогда // ПолеСписка(ListBox)
		СтрКода0 = "
		|ПолеСписка1 = Форма1.ЭлементыУправления.Добавить(Ф.ПолеСписка());
		|ПолеСписка1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|ПолеСписка1.РежимВыбора = Ф.РежимВыбора.МножественныйПростой;
		|
		|ТаблицаДанных4 = Ф.ТаблицаДанных();
		|ТаблицаДанных4.ИмяТаблицы = ""ТД4"";
		|Колонка7 = ТаблицаДанных4.Колонки.Добавить(Ф.КолонкаДанных(""Как Отобразить Элемент"", Ф.ТипДанных.Строка));
		|Колонка8 = ТаблицаДанных4.Колонки.Добавить(Ф.КолонкаДанных(""Значение_элемента"", Ф.ТипДанных.Объект));
		|ТекСтрока = ТаблицаДанных4.Строки.Добавить(ТаблицаДанных4.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(""Как Отобразить Элемент"", ""Строка1 (Строка)"");
		|ТекСтрока.УстановитьЭлемент(""Значение_элемента"", ""Значение строки 1 в список"");
		|ТекСтрока = ТаблицаДанных4.Строки.Добавить(ТаблицаДанных4.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка2 (Булево)"");
		|ТекСтрока.УстановитьЭлемент(1, Истина);
		|ТекСтрока = ТаблицаДанных4.Строки.Добавить(ТаблицаДанных4.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка3 (Объект)"");
		|ТекСтрока.УстановитьЭлемент(1, Форма1);
		|ТекСтрока = ТаблицаДанных4.Строки.Добавить(ТаблицаДанных4.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка4 (Дата)"");
		|ТекСтрока.УстановитьЭлемент(1, (Дата(2019,01,02,03)));
		|ТекСтрока = ТаблицаДанных4.Строки.Добавить(ТаблицаДанных4.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка5 (Число)"");
		|ТекСтрока.УстановитьЭлемент(1, 156.54888);
		|ПолеСписка1.ОтображениеЭлемента = ""Как Отобразить Элемент"";
		|ПолеСписка1.ЗначениеЭлемента = ""Значение_элемента"";
		|ПолеСписка1.ИсточникДанных = ТаблицаДанных4;
		|
		|ПолеСписка1.УстановитьВыбор(0, Ложь);
		|ПолеСписка1.УстановитьВыбор(2, Истина);
		|";
	ИначеЕсли (КлассАнгл = "DataGrid") Тогда // СеткаДанных(DataGrid)
		СтрКода0 = "
		|СеткаДанных1 = Форма1.ЭлементыУправления.Добавить(Ф.СеткаДанных());
		|СеткаДанных1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|СеткаДанных1.ОтображатьЗаголовок = Истина;
		|СеткаДанных1.ТекстЗаголовка = ""Сетка данных333333"";
		|
		|ТаблицаДанных1 = Ф.ТаблицаДанных();
		|ТаблицаДанных1.ИмяТаблицы = ""ТД1"";
		|Колонка1 = ТаблицаДанных1.Колонки.Добавить(Ф.КолонкаДанных(""Отображение_Элемента"", Ф.ТипДанных.Строка));
		|Колонка2 = ТаблицаДанных1.Колонки.Добавить(Ф.КолонкаДанных(""Значение_элемента"", Ф.ТипДанных.Строка));
		|ТекСтрока = ТаблицаДанных1.Строки.Добавить(ТаблицаДанных1.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка1"");
		|ТекСтрока.УстановитьЭлемент(1, ""Строка1"");
		|ТекСтрока = ТаблицаДанных1.Строки.Добавить(ТаблицаДанных1.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка2"");
		|ТекСтрока.УстановитьЭлемент(1, ""Строка2"");		
		|СеткаДанных1.ИсточникДанных = ТаблицаДанных1;
		|";
	ИначеЕсли (КлассАнгл = "PropertyGrid") Тогда // СеткаСвойств(PropertyGrid)
		СтрКода0 = "
		|СеткаСвойств1 = Форма1.ЭлементыУправления.Добавить(Ф.СеткаСвойств());
		|СеткаСвойств1.ОтображатьПанельИнструментов = Истина;
		|СеткаСвойств1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|СеткаСвойств1.ВыбранныйОбъект = Форма1;
		|Кнопка1 = СеткаСвойств1.ЭлементыУправления.Добавить(Ф.Кнопка());
		|СеткаСвойств1.АктивныйЭлемент = Кнопка1;
		|";
	ИначеЕсли (КлассАнгл = "ListView") Тогда // СписокЭлементов(ListView)
		СтрКода0 = "
		|СписокЭлементов1 = Форма1.ЭлементыУправления.Добавить(Ф.СписокЭлементов());
		|СписокЭлементов1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|СписокЭлементов1.Флажки = Истина;
		|СписокЭлементов1.РежимОтображения = Ф.РежимОтображения.Подробно;
		|СписокЭлементов1.МножественныйВыбор = Истина;
		|
		|Колонка1 = СписокЭлементов1.Колонки.Добавить(Ф.Колонка(""Номер"", 70, Ф.ГоризонтальноеВыравнивание.Лево));
		|Элементы = СписокЭлементов1.Элементы;
		|Для А = 1 По 10 Цикл
		|	Элементы.Добавить(Ф.ЭлементСпискаЭлементов("""" + А));
		|КонецЦикла;
		|Элементы.Элемент(1).Выбран = Истина;
		|Элементы.Элемент(3).Выбран = Истина;
		|Элементы.Элемент(4).Выбран = Истина;
		|Элементы.Элемент(5).Сфокусирован = Истина;
		|СписокЭлементов1.Сортировать(Колонка1, Ф.ПорядокСортировки.ПоВозрастанию);
		|
		|СписокЭлементов1.Фокус();
		|";
	ИначеЕсли (КлассАнгл = "DataGridColumnStyle") Тогда // СтильКолонкиСеткиДанных(DataGridColumnStyle)
		СтрКода0 = "
		|СеткаДанных1 = Форма1.ЭлементыУправления.Добавить(Ф.СеткаДанных());
		|СеткаДанных1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|СеткаДанных1.ОтображатьЗаголовок = Истина;
		|СеткаДанных1.ТекстЗаголовка = ""Сетка данных333333"";
		|
		|ТаблицаДанных1 = Ф.ТаблицаДанных();
		|ТаблицаДанных1.ИмяТаблицы = ""ТД1"";
		|Колонка1 = ТаблицаДанных1.Колонки.Добавить(Ф.КолонкаДанных(""Отображение_Элемента"", Ф.ТипДанных.Строка));
		|Колонка2 = ТаблицаДанных1.Колонки.Добавить(Ф.КолонкаДанных(""Значение_элемента"", Ф.ТипДанных.Строка));
		|ТекСтрока = ТаблицаДанных1.Строки.Добавить(ТаблицаДанных1.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка1"");
		|ТекСтрока.УстановитьЭлемент(1, ""Строка1"");
		|ТекСтрока = ТаблицаДанных1.Строки.Добавить(ТаблицаДанных1.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка2"");
		|ТекСтрока.УстановитьЭлемент(1, ""Строка2"");		
		|СеткаДанных1.ИсточникДанных = ТаблицаДанных1;
		|
		|СтильТаблицыСеткиДанных1 = Ф.СтильТаблицыСеткиДанных();
		|СтильТаблицыСеткиДанных1.ИмяОтображаемого = ""ТД1"";
		|СтилиТаблицы1 = СеткаДанных1.СтилиТаблицы;
		|СтилиТаблицы1.Добавить(СтильТаблицыСеткиДанных1);
		|СтилиКолонкиСеткиДанных1 = СтильТаблицыСеткиДанных1.СтилиКолонкиСеткиДанных;
		|СтильКолонкиСеткиДанных1 = СтилиКолонкиСеткиДанных1.Элемент(1);
		|СтильКолонкиСеткиДанных1.ТекстЗаголовка = СтильКолонкиСеткиДанных1.ТекстЗаголовка + ""55"";
		|";
	ИначеЕсли (КлассАнгл = "DataGridTableStyle") Тогда // СтильТаблицыСеткиДанных(DataGridTableStyle)
		СтрКода0 = "
		|СеткаДанных1 = Форма1.ЭлементыУправления.Добавить(Ф.СеткаДанных());
		|СеткаДанных1.Стыковка = Ф.СтильСтыковки.Заполнение;
		|СеткаДанных1.ОтображатьЗаголовок = Истина;
		|СеткаДанных1.ТекстЗаголовка = ""Сетка данных333333"";
		|
		|ТаблицаДанных1 = Ф.ТаблицаДанных();
		|ТаблицаДанных1.ИмяТаблицы = ""ТД1"";
		|Колонка1 = ТаблицаДанных1.Колонки.Добавить(Ф.КолонкаДанных(""Отображение_Элемента"", Ф.ТипДанных.Строка));
		|Колонка2 = ТаблицаДанных1.Колонки.Добавить(Ф.КолонкаДанных(""Значение_элемента"", Ф.ТипДанных.Строка));
		|ТекСтрока = ТаблицаДанных1.Строки.Добавить(ТаблицаДанных1.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка1"");
		|ТекСтрока.УстановитьЭлемент(1, ""Строка1"");
		|ТекСтрока = ТаблицаДанных1.Строки.Добавить(ТаблицаДанных1.НоваяСтрока());
		|ТекСтрока.УстановитьЭлемент(0, ""Строка2"");
		|ТекСтрока.УстановитьЭлемент(1, ""Строка2"");		
		|СеткаДанных1.ИсточникДанных = ТаблицаДанных1;
		|
		|СтильТаблицыСеткиДанных1 = Ф.СтильТаблицыСеткиДанных();
		|СтильТаблицыСеткиДанных1.ИмяОтображаемого = ""ТД1"";
		|СтильТаблицыСеткиДанных1.СеткаДанных = СеткаДанных1;
		|";
	ИначеЕсли (КлассАнгл = "Bitmap") Тогда // Картинка(Bitmap)
		СтрКода0 = "" + Символы.ПС + 
		"СтрМасленица1 = ""/9j/4AAQSkZJRgABAQEAeAB4AAD/4QA2RXhpZgAATU0AKgAAAAgAAQEyAAIAAAAUAAAAGgAAAAAyMDE4OjA3OjE5IDA5OjQxOjQxAP/bAEMACAYGBwYFCAcHBwkJCAoMFA0MCwsMGRITDxQdGh8eHRocHCAkLi"" + Символы.ПС + "+ Символы.ПС + 
		"""cgIiwjHBwoNyksMDE0NDQfJzk9ODI8LjM0Mv/bAEMBCQkJDAsMGA0NGDIhHCEyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMv/AABEIAFAAdwMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAA"" + Символы.ПС + "+ Символы.ПС + 
		"""AAAAAAAAQIDBAUGBwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaH"" + Символы.ПС + "+ Символы.ПС + 
		"""iImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITE"" + Символы.ПС + "+ Символы.ПС + 
		"""GEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1t"" + Символы.ПС + "+ Символы.ПС + 
		"""fY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AJL2XUYr+CeYldgIlkTJKlTzj5gOMD8AvIxWlLrF/qWtwyQpdfangIPlqzNEAFxjjgEng7j82c4/i9AUMHjZbe1RovuOY9zjjbnPByRx+NVk1COHWYtFjISaaEzoE2opI"" + Символы.ПС + "+ Символы.ПС + 
		"""J+XA5yQGPuFNdSnZaoyb1ORTTtVuNYs7m6s7s+aZWmlmj2bzkBSc5C5BJAIUkLgeta+laRf6ReG8fyWWMqodG34/cplgvBwGBUAkHA54Oatfbml1WGCKXfEYvNEudyybyERs9fUY9T7HFjUtSTQlsd8M1w93eRWxbeRt3nBbp0Hp/8A"" + Символы.ПС + "+ Символы.ПС + 
		"""XqPaxnewpKUd0RT69dmKSGyvIJ5mDL87KCi/3gU5LcHHGDleetUp9Q8Q2Hh29kkmgs32B4pXHIZmyVVefmOWA3Zwcfht2+q2j61PpqWconih817gBRGT8oKg5zuAdevHXngiqXimyuNR8NX0Ec0ocR+YrIvLFfmCkd1OOQME+1KTTg1"" + Символы.ПС + "+ Символы.ПС + 
		"""FDjJqST6mgy64zunmBRvOfN2BQu4H5ShLZxlefcjBxWDfeGtWfWvtyPG/m+buZZW3RbjlcbiOPmbAHAwODjJ2b3WrgagLSwtzceW6efdzMI4woPzAd2YgY+UYBYHnGKuteEp8qyMcc7Bj9Wx/KhNp3sNu/Uw4bT+w9PN5q+vTxIiqJJ"" + Символы.ПС + "+ Символы.ПС + 
		"""JBBGmeAAvHUnAGSTz1rPmlu/7OstdvZ5bDDtG0d3KYcxFmyAoTliFVhkbjgdDXQvLPIwaO2VJEOUlnO8qemRjO3gkcetZV5o91eszXN1FKZBtbfbEnHcKS/H4AUKOvvOw09O5j2vhmRbxrq31N2glxhDACfL42ruz25IO0EEg84IOkl"" + Символы.ПС + "+ Символы.ПС + 
		"""qkckqfb5Hd/3ckZlDHjOARjjHP45znmlfR20nRbiOzvJ5GWF1U3LKdqkc8hewyQCCM8dOK8a8QaMmhXsSRKwgkXMeW3MpXgjIPXgHr/ABDvmpqV7S5URKE4w9qlovM9gj0pIbi5uY3KzTkM0rYLIAuCFPZepwc8knvVG90uxubqFZW8"" + Символы.ПС + "+ Символы.ПС + 
		"""+8twbhEG0lhgjkHjn2A7dKj8M6nP4g8I280t2Y7m2lMM9wx3F9g4LEnqVZCSe4JrPi0Y3mpC5tp5JpTCxjkSZ4iy5A+5GSVwCMk4PzqNi1UXdXuHNtYvXelzXV1p7LfA28byLMSuWdPm4I5DESYwfl4ZjzmimQacyX726alqOQN67nD"" + Символы.ПС + "+ Символы.ПС + 
		"""pIrc7lLBucgg5JIxjp1KJR1vcqMtNjp/GnigeFNE+2KUjdpREqiHzXfOScDcACAC2SccY6kVnawrrbt4ijntrmRtNSB5PJZGdWcmT5RynGwDOSuDu6E10eq6dFqmnzWV2qG2lZWdVH3trh8HdwQSoBGORkVzHjHxTb+DtJtbm++0XMc"" + Символы.ПС + "+ Символы.ПС + 
		"""ji3jSMjzHIQ5ZiTg9OT6tUcl73dilNRa0vqclLqd5NriGKSPzCSqbNuQwYnGzGAwzjptxzgkmu9Nq/irRbJZpprVrS8ScOjBjIyA8E55X5sc9duSOa5iK88Im1sr17cy/bbdLpY9zOyqxyd2SRkFSD7riu60+e2ktYPs0YEDIPL2nIx"" + Символы.ПС + "+ Символы.ПС + 
		"""04/LHFc+HwzpzcnJP5HRisTCcEowsc14XsJk8XeIr65aRmkkHll4wPOQvKu5sjs0Z2kYAVh2NdcbeFsZC5BznIGPxp+yPP+pXJ7nFc9rHjrw5oN69jdyyPcx8SR28O4pwCMnIGcEHGc/SuvSCOHWT2OjEAOCNhA5BJyRXJ3HjnT7P4g"" + Символы.ПС + "+ Символы.ПС + 
		"""f8ItfIsCtGnlXpmyrzMFIjK4+X73Unrj1ra03xDo2sJu0jUra7YIJCkThmAYfLlTyD0yCMjkGvHtbHgdtQ8TyXd5HeXyXMrFp2ffISS2IwODjOwEDquc7SDSlOKV2b0afO7bHtdw0VrFJNKrusYJIUc4rgNKv9Uj8TTz3b3y2RBDiWJ"" + Символы.ПС + "+ Символы.ПС + 
		"""QJm6IFGeCM5OzOcADIxUukeJR4t8Ly3VnFLbNaxj7RbuclFKHPPUgjdg9Ts5A5qvd3ttdNdaXGhTy7YyNck7VGGVTg9c/NnPtXj5hialOrBQ16nfg4LkkpLfTU6XV9cs9IsJbq+I8hPlIHzFyeigdyef1JwATXiPiLXLjXJI2Fk1pZW"" + Символы.ПС + "+ Символы.ПС + 
		"""zssW4ZYb8FQ7dN2Ez26d8Zr0HVNV0XxHol3axJJJNCBPDFd45UfKH4PXDkYP8Ae961ZLHTvtF48MSONTnV7iN/mVgFbAx6ZDN9Se2BV4vHQpSVlfS5zxwtaUXFuyZg/C9m/srVY1VtqvGVGcAkqwwPQ8D9PSt7Ur77Alva77pftdxGj"" + Символы.ПС + "+ Символы.ПС + 
		"""lUKqz8ZC84UEL931wflIJqHwtYW2i3OrLbBVhe5URxsc7AI1JwT2y/TtitPVLSS+NhLDs/0W5+0bWyFYiN1UZGe7g/hXdRqKdNTWzOdUnT9x7odAIbq6uJVeby2kPl+YNrHlssMY4JPfnAHXAwVWYa1JGN624O7kW0r5I9egP4e/tRW"" + Символы.ПС + "+ Символы.ПС + 
		"""/Lf7RLbXQ7Qr5jFjgL/vYrk/EHhqw8V6nbLqlvHc2NmXKBXlYru+98sYBJOxRy2B+VbuySUt5mwHGOgz+ladqIHtWn8qOKRpCG2gDZhsAcj0x9cn1p1LJWJg23c8T8R6JDouv6RpmmNJHazSGztUkcuYyZCcEjrgz+/3evGa9a0m1sb"" + Символы.ПС + "+ Символы.ПС + 
		"""DTLa188jyIhEoJIJA4yfc4zWZcSRJqYVLOJoZZliZimTEzBiGT0baCMj1HtnajhjRAFic4GP85FUoRjJtdbEOrKcUnsrjdS1CeHT5f7MsVvrgL8kLTCJWPpuIPb/PevJYW0nS9d1A+KJP7O1a8uZLuO1U+cyJJt2qWjX74yxC5BIK5H"" + Символы.ПС + "+ Символы.ПС + 
		"""Y+ry3E0WAkDDc2AT834YFeba94M1651i8vFh8uPzJHjuGuYlB3sWXd95gRu28D8cc1nVjG1m7F0qkk7xVy58PddhX7dbWHh+6ht59Smu1kzyuSGQMCBt+QBQATjr0YtXNRfDjV08Qx2MLwy25lRDcSMuVjALfMmQ27aOi5B9epHfKjW"" + Символы.ПС + "+ Символы.ПС + 
		"""cs0FvHFCluFURwSMqIdq7gOvBYscHJ+brVVLm5g1S3aHZ5speOJBu5Yxtlh0JOO/wBPavEeMqVMSqKSsnY9ihGVGnKae61LWgNpGk3l9pSQ6ek1xJGqizkL/aE5ALDHy43MSmTtBJBwQTi6jfx6FDevPZLexWCkB9oInXgIGb0zt3Af"" + Символы.ПС + "+ Символы.ПС + 
		"""3T14rGvdLtfCej2WqIZ723uZUkVlkEfKszkmTByr/KRtC7gobjv3UPhjS5rOOV472GArlrSe6by1X0YHnHsT04PpWlfDJuKh9l+ZUJct5y+F7eZ5r4M/sm4+1fZLX7B5c8UswlmaUyAb9qrhQdvJJBOSdpzxXU3d5aFDfFpGS3ILOqr"" + Символы.ПС + "+ Символы.ПС + 
		"""FApPyjOR74+YnrXUW+i6NJIDBpdtHDGAiKkexHJJJOwcHHPJGeawPiiPK8C3agAebNDGOMcbwcf8Ajpoq4WdWTc5tLsR7aDmlCPUzNF13T7jXTZ2t0LmV4mlmI+6HBH3W/iBDAf8AAM4GWqPxbqGpaRf2WuaZDcXLRq6TW5djA0fA4A"" + Символы.ПС + "+ Символы.ПС + 
		"""6OSc5z/CeOMV5lpFydL1W0vxkeRKC+OMoeG/8AHSa94uUSKLcPOZuiIhbLt2A54zjqcAdyK7sKkqSpp7GeNpexqJ23I9F1ZNXUzxwXcCYUqJsgtlQW/wC+WLL6HbkE0Uy0ivvtDPLHb2satg+bOzOcg46cL+Jzx06UVu4pdTi5vI6F7"" + Символы.ПС + "+ Символы.ПС + 
		"""yRVJVSX3BVRTt3EnAHAzyTWsulrtL3MjyyuBuwSqgjoAB6epJNYnkypcxzmGTYkyOTtPIVw3FdaskMsAZZFZGGVYHII7EVvW921jnpq+5w+sWclpqWl21uw+zyX6SnceVIVyee+cd66pXiXGZWJx6GuX8VXsX9saV8xWC2ulkmk2kgH"" + Символы.ПС + "+ Символы.ПС + 
		"""a2AcDgk4xWrBrWlXm2MXMLyP8uGXDEnjHQc0OMmrtCi0nZMvRfv7mWVG4DBBkZwu0nj6k8//AFqZcFfLeO5thLC6lX2DcGU9QUPUY7c5qKzv7K3nmtjKFYSgcqQoyikKWxgHByBnPNW3ZCxj3rnnGT1A/wAK4K/uzvbQ7aKfJvqcNqH"" + Символы.ПС + "+ Символы.ПС + 
		"""g68nkB8Pa8AFG0214Szxr2UPjzdo/usTj17VV0zwBqv24y6zqcDRYIkhsldXlB/haZjvCE9VHB9q7m6s47hQJEDY6E4OPoe34VQe2nDLHDfXQTnzCJi2BjsWyQfoaI1IvVP8AD9S3KaVmgvNQgsVW1gg+0XCAKltbqFVABwCeiADHHX"" + Символы.ПС + "+ Символы.ПС + 
		"""HQVDHFdXCia/YZzlYYwQiH056n3P6U63tpbZRAgiZVJD4TDbu/1yefXnv1rK1zxHDZ2bLG5MrEqioSrvglTg/wLkEFupAO3JII0haT5aa1Iaduab0JX8RWFpqMtlJeWUdxHLh4HuFRwSo28EjOVKnjPPFcV8Ttbg1HSNNsoJY2kN2ZJ"" + Символы.ПС + "+ Символы.ПС + 
		"""I0lV/uoQDx7uRXnF9dNqV7dXUqqJLiYu6quAvzdMf45PqTSpGsSRSBQOWzge5xXNUq6ONj28LlvLONTm87EOMnYRkMMHn616tYeIIJtA00rcs1/cww20gkz5aEsI+e3Lr1HPOMgdPKCfmBB/wA5r0H4e3NmLZvtMayXFtdLFbswyIfM"" + Символы.ПС + "+ Символы.ПС + 
		"""DFDj3dWGRyMj1ows7SaZWb0r0lNdH+Z0F1IujQRWbFdXugXYWxQFpoyxOTkn5wTknvgnAopbK8hlNveawAW2Zt5DcbAq44IfIO5wSexOx8jjFFejdLRo+cWp6Zqc9zDayi3hjL7SE8xsAntwOfr09q4LWI/GF/cS3Vtv02I4QWlk8bc"" + Символы.ПС + "+ Символы.ПС + 
		"""ckvuYHLc4JAXtweo7xY4A7sCwLHJ6VIZYgMKUH1ohWUNUrilSctzy200PxmmkTaWbu5+y3beZKZ5Y2OeO/wB8Z2jgHirMXgy/gMa/b0REXIWMb8t6cgHGe+a9ELoxz56fQVBI8S9WjOTgZ3cn860+uS6JIXsF1PNPEdlc6XYrPLcs11"" + Символы.ПС + "+ Символы.ПС + 
		"""JKgWdHYOAFb5c8HHTjkHHNQ2nie+hhJyHl3bt8hLAZPXHUHryCOuTk113ijS/7bsFt4p4IpEcOrOhI9wcEHv8A56jkbXwDdwTrJJ4gSbDbiptSN3ryHz3P9c81NGUZTlKrs7WLmpKEVTequbv/AAnES7Rc29wHJAYpAjKvTPJZScc9F"" + Символы.ПС + "+ Символы.ПС + 
		"""HTvWoPF+kfZkl+1QspIV9rgFMjuv3l/EY9+9Z8nh2ye4c7IltSd0cMUZVkOACN/Vhx0OcZ4xWPq/hqzt9Pubm3e4DIAVSTBAyQPTPAJ/L8ayrRw6g5R3SLpTquajJaFjVvHMJuzHZ3MPmMQixRzJIePvF3TcA3QBVbOOSecLgeRNfXE"" + Символы.ПС + "+ Символы.ПС + 
		"""txLMqxomWaPbiNQvChSRj5eOnXn1NXfDvhe1ubFLyd5Nt0z+dsA3fK7qAN3GMAV0dr4Us7OF4v7Qnmt34aHy4yrL3ByTn0rajUpU6acN2jOqpznaWyZj6h4V0qeDyhDbBVVII5TBl1iVCQ5IIOSePUjaayZPA+lOZCsVwgZjGi/aWby"" + Символы.ПС + "+ Символы.ПС + 
		"""iBu3j5eQcgY6/0TxUtv4cWCPQrG7dizeYiST26pjoQqMA+cnkfnzXGpqmukgLqV5tBDCOEM2zncoDHLYBORkn8a8KeBqQ2l+Z7NLGReibR2MvgTToY7sLBJIVXbGHuGLbuTlcKA3UcEfwn1OGXelW+kWZfTwI1O1Z0tweVJJ5YsWPKo"" + Символы.ПС + "+ Символы.ПС + 
		"""TyPlcdQxzW0qx1+70ZLpdQm3SFh5Utz5L4VmUYzgqMEnjbnceua0bfw/qUsaPeajkoMJFLdNchOMcBiQDgkccgE104bA1ITjUlPRephicbGcXT1dyhq+orqumRrYyx/aLRjJCqn95tO1GU/wC1kk8AcLkcNRVWfQNRhnRlBmKjassFz"" + Символы.ПС + "+ Символы.ПС + 
		"""iVR1xhsZH698dyV67cY6JnlKLP/2Q=="";"+ Символы.ПС + 
		"Картинка1 = Ф.Картинка(СтрМасленица1);" + Символы.ПС;
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
	Иначе
		СтрКода0 = "" + КлассРус + "1 = Ф." + КлассРус + "();";
	КонецЕсли;
	Возврат Истина;
КонецФункции//ПолучитьОбъект

Процедура Тестирование();
	Таймер = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	СписокСообщений = Новый СписокЗначений;
	
	// Создаем файл для каждого класса
	// Если конструктора нет, то получаем методом или свойством другого объекта
	// Тестируем свойства, методы, перечисления.
	// Список классов берем из файла OneScriptForms.html
	// Свойства - из файла OneScriptForms....(Класс).....Members.html
	// Методы - из файла OneScriptForms....(Класс).....Members.html
	// Перечисления - из файла OneScriptForms.html
	
	УдалитьФайлы("C:\444\Тестирование", "*.os");
	УдалитьФайлы("C:\444\ТестированиеВсех", "*.os");
	
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать("C:\444\OneScriptFormsru\OneScriptForms.html");
	Стр12 = ТекстДок.ПолучитьТекст();
	Массив1 = СтрНайтиМежду(Стр12, "<H3 class=dtH3>Классы</H3>", "</TBODY></TABLE>", Ложь, );
	Массив2 = СтрНайтиМежду(Массив1[0], "Описание</TH></TR>", "</TBODY></TABLE>", Ложь, );
	Массив3 = СтрНайтиМежду(Массив2[0], "<TR vAlign=top>", "</TD></TR>", Ложь, );
	СписокСообщений.Добавить("Классов = " + Массив3.Количество());
	Для А1 = 0 По Массив3.ВГраница() Цикл
		Массив4 = СтрНайтиМежду(Массив3[А1], ".html"">", "</A></TD>", Ложь, );
		Для А = 0 По Массив4.ВГраница() Цикл
			ТекстТеста = 
			"ПодключитьВнешнююКомпоненту(""C:\444\111\OneScriptForms\OneScriptForms\bin\Debug\OneScriptForms.dll"");
			|Ф = Новый ФормыДляОдноСкрипта();
			|Форма1 = Ф.Форма();
			|Форма1.Отображать = Истина;
			|Форма1.Показать();
			|";
			
			СтрХ = Массив4[А];
			СтрХ = СтрЗаменить(СтрХ, "&nbsp;", " ");
			КлассАнгл = СтрНайтиМежду(СтрХ, "(", ")", , )[0];
			
			// не создаем файл для теста, если у класса нет наследуемых свойств, или свойств нет совсем.
			Если (КлассАнгл = "BitmapData") или
				(КлассАнгл = "Brush") или
				(КлассАнгл = "EventArgs") Тогда
				Продолжить;
			КонецЕсли;
			
			КлассРус = СтрНайтиМежду(СтрХ, ".html"">", " (", , )[0];
			СписокСообщений.Добавить("===Класс=============================================================");
			СписокСообщений.Добавить("" + КлассРус + " (" + КлассАнгл + ")");
			//находим свойства класса из файла OneScriptForms....(Класс).....Members.html
			ИмяФайлаЧленов = "C:\444\OneScriptFormsru\OneScriptForms." + КлассАнгл + "Members.html";
			
			Если Не ПолучитьОбъект(КлассРус, КлассАнгл) Тогда
				Продолжить;
			КонецЕсли;
			
			ТекстТеста = ТекстТеста + "
			|" + СтрКода0 + "
			|";
			
			ТекстТеста = ТекстТеста + "
			|НекорректныеСвойства = Новый СписокЗначений;
			|";
			
			М_СвойстваТест = СвойстваТест(ИмяФайлаЧленов, КлассРус, КлассАнгл);
			// не создаем файл для теста, если у класса нет наследуемых свойств, или свойств нет совсем.
			Если М_СвойстваТест.Количество() = 0 Тогда
				// Сообщить("Нет наследуемых свойств у класса " + КлассРус + " (" + КлассАнгл + ")");
				Продолжить;
			КонецЕсли;
			
			ТекстТеста = ТекстТеста + "
			|Если НекорректныеСвойства.Количество() > 0 Тогда
			|	Сообщить(""---Не прошли тест свойства:---"");
			|КонецЕсли;
			|Для А = 0 По НекорректныеСвойства.Количество() - 1 Цикл
			|	Сообщить("""" + НекорректныеСвойства.Получить(А).Значение);
			|КонецЦикла;
			|Сообщить(""Тест завершен."");
			|Сообщить(""==============================================="");
			|";
			
			//находим методы класса из файла OneScriptForms....(Класс).....Members.html
			МетодыТест(ИмяФайлаЧленов, КлассРус, КлассАнгл);
			
			// подправляем код тестируемого класса и для файла "C:\444\Тестирование\.........."
			// и для файла "C:\444\ТестированиеВсех\.........."
			
			
			
			
			
			
			
			
			
			Если КлассРус = "ЭлементМеню" Тогда
				ПодстрокаПоиска = "Сообщить(""ЭлементМеню1.Родитель = "" + ЭлементМеню1.Родитель + "" (Тип: "" + ЭлементМеню1.Родитель.Тип.ВСтроку() + "" ("" + ЭлементМеню1.Родитель.Type.ВСтроку() + "").)(Только чтение.)"");";
				ПодстрокаЗамены = "
				|	ГлавноеМеню1 = Ф.ГлавноеМеню();
				|	ГлавноеМеню1.ЭлементыМеню.Добавить(ЭлементМеню1);
				|	Сообщить(""ЭлементМеню1.Родитель = "" + ЭлементМеню1.Родитель + "" (Тип: "" + ЭлементМеню1.Родитель.Тип.ВСтроку() + "" ("" + ЭлементМеню1.Родитель.Type.ВСтроку() + "").)(Только чтение.)"");";
				ТекстТеста = СтрЗаменить(ТекстТеста, ПодстрокаПоиска, ПодстрокаЗамены);
			КонецЕсли;
			Если КлассРус = "УзелДерева" Тогда
				ПодстрокаПоиска = "Сообщить(""УзелДерева1.Дерево = "" + УзелДерева1.Дерево + "" (Тип: "" + УзелДерева1.Дерево.Тип.ВСтроку() + "" ("" + УзелДерева1.Дерево.Type.ВСтроку() + "").)(Только чтение.)"");";
				ПодстрокаЗамены = "
				|	Дерево = Ф.Дерево();
				|	Дерево.Узлы.Добавить(УзелДерева1);
				|	Сообщить(""УзелДерева1.Дерево = "" + УзелДерева1.Дерево + "" (Тип: "" + УзелДерева1.Дерево.Тип.ВСтроку() + "" ("" + УзелДерева1.Дерево.Type.ВСтроку() + "").)(Только чтение.)"");";
				ТекстТеста = СтрЗаменить(ТекстТеста, ПодстрокаПоиска, ПодстрокаЗамены);
			КонецЕсли;
			Если КлассРус = "КнопкаПанелиИнструментов" Тогда
				ПодстрокаПоиска = "КнопкаПанелиИнструментов1.ВыпадающееМеню = КнопкаПанелиИнструментов1.ВыпадающееМеню;";
				ПодстрокаЗамены = "Меню20 = Ф.КонтекстноеМеню();
				|	Меню21 = Меню20.ЭлементыМеню.Добавить(Ф.ЭлементМеню(""1 действие""));
				|	КнопкаПанелиИнструментов1.Стиль = Ф.СтильКнопокПанелиИнструментов.КнопкаВыпадающегоСписка;
				|	КнопкаПанелиИнструментов1.ВыпадающееМеню = Меню20;
				|	КнопкаПанелиИнструментов1.ВыпадающееМеню = КнопкаПанелиИнструментов1.ВыпадающееМеню;";
				ТекстТеста = СтрЗаменить(ТекстТеста, ПодстрокаПоиска, ПодстрокаЗамены);
			КонецЕсли;
			Если КлассРус = "ПолеСписка" Тогда
				ПодстрокаПоиска = "ПолеСписка1.ИсточникДанных = ПолеСписка1.ИсточникДанных;";
				ПодстрокаЗамены = "// ПолеСписка1.ИсточникДанных = ПолеСписка1.ИсточникДанных;";
				ТекстТеста = СтрЗаменить(ТекстТеста, ПодстрокаПоиска, ПодстрокаЗамены);
			КонецЕсли;
			Если КлассРус = "СписокЭлементов" Тогда
				ПодстрокаПоиска = "Попытка
				|	СписокЭлементов1.ИндексыВыбранных = СписокЭлементов1.ИндексыВыбранных;
				|	
				|	Сообщить(""СписокЭлементов1.ИндексыВыбранных = "" + СписокЭлементов1.ИндексыВыбранных + "" (Тип: "" + СписокЭлементов1.ИндексыВыбранных.Тип.ВСтроку() + "" ("" + СписокЭлементов1.ИндексыВыбранных.Type.ВСтроку() + "").)(Чтение и запись.)"");
				|
				|Исключение
				|	НекорректныеСвойства.Добавить(""ИндексыВыбранных (SelectedIndices)""); КонецПопытки;";
				ПодстрокаЗамены = "// свойство СписокЭлементов.ИндексыВыбранных (ListView.SelectedIndices) в разработке";
				ТекстТеста = СтрЗаменить(ТекстТеста, ПодстрокаПоиска, ПодстрокаЗамены);
			КонецЕсли;
			// закончили подправлять код тестируемого класса и для файла "C:\444\Тестирование\.........."
			// и для файла "C:\444\ТестированиеВсех\.........."
			
			
			
			
			
			
			ТекстТеста = ТекстТеста + "
			|Форма1.Текст = ""Тест " + КлассРус + "(" + КлассАнгл + ")"";
			|Пока Ф.Продолжать Цикл
			|	Выполнить(Ф.ПолучитьСобытие());
			|КонецЦикла;
			|";
			ТекстДокХХХ = Новый ТекстовыйДокумент;
			ТекстДокХХХ.УстановитьТекст(ТекстТеста);
			ТекстДокХХХ.Записать("C:\444\Тестирование\" + КлассРус + "(" + КлассАнгл + ").os");
			
			ПодстрокаПоиска = "Сообщить(""Тест завершен."");
			|Сообщить(""==============================================="");";
			ПодстрокаЗамены = "
			|Если НекорректныеСвойства.Количество() > 0 Тогда
			|	ТекстДокХХХ = Новый ТекстовыйДокумент;
			|	ТекстДокХХХ.Прочитать(""C:\444\ОшибкиТестаСвойств.txt"");
			|	ТекстДокХХХ.ДобавитьСтроку(Новый Файл(ТекущийСценарий().Источник).Имя);
			|	Для А = 0 По НекорректныеСвойства.Количество() - 1 Цикл
			|		ТекстДокХХХ.ДобавитьСтроку("""" + Символы.Таб + НекорректныеСвойства.Получить(А).Значение);
			|	КонецЦикла;
			|	ТекстДокХХХ.ДобавитьСтроку(""==============================================="");
			|	ТекстДокХХХ.Записать(""C:\444\ОшибкиТестаСвойств.txt"");
			|КонецЕсли;
			|Сообщить(""Тест завершен."");
			|Сообщить(""==============================================="");
			|Форма1.Закрыть();
			|";
			ТекстТеста = СтрЗаменить(ТекстТеста, ПодстрокаПоиска, ПодстрокаЗамены);
			
			ПодстрокаПоиска = "Форма1 = Ф.Форма();";
			ПодстрокаЗамены = 
			"Форма1 = Ф.Форма();
			|Форма1.СостояниеОкна = Ф.СостояниеОкнаФормы.Свернутое;";
			ТекстТеста = СтрЗаменить(ТекстТеста, ПодстрокаПоиска, ПодстрокаЗамены);
			
			
			
			
			
			
			
			
			
			
			
			
			
			ТекстДокХХХ = Новый ТекстовыйДокумент;
			ТекстДокХХХ.УстановитьТекст(ТекстТеста);
			ТекстДокХХХ.Записать("C:\444\ТестированиеВсех\" + КлассРус + "(" + КлассАнгл + ").os");
		КонецЦикла;
	КонецЦикла;
		
	//находим Перечисления из файла OneScriptForms.html
	ПеречисленияТест();
	
	// Для А = 0 По СписокСообщений.Количество() - 1 Цикл
		// Сообщить("" + СписокСообщений.Получить(А).Значение);
	// КонецЦикла;
	
	Сообщить("Выполнено за: " + ((ТекущаяУниверсальнаяДатаВМиллисекундах() - Таймер)/1000)/60 + " мин.");
КонецПроцедуры//Тестирование()

Функция СвойстваТест(ИмяФайлаЧленов, КлассРус, КлассАнгл)
	МассивСвойств = МассивСвойств(ИмяФайлаЧленов);
	СписокСообщений.Добавить("---Свойства---(" + МассивСвойств.Количество() + ")");
	Для А = 0 По МассивСвойств.ВГраница() Цикл
		ФайлСвойства    = МассивСвойств[А][0];
		СвойствоАнгл    = МассивСвойств[А][1];
		СвойствоРус     = МассивСвойств[А][2];
		СвойствоРусАнгл = МассивСвойств[А][3];
		СписокСообщений.Добавить("" + Символы.Таб + СвойствоРусАнгл);
		ТипСвойства = ТипСвойства(ФайлСвойства);
		// Сообщить("ТипСвойства = " + ТипСвойства);
		
		ИмяПеречисления = ИмяПеречисления(ФайлСвойства);
		// Сообщить("ИмяПеречисления = " + ИмяПеречисления);
		ИспользованиеСвойства = ИспользованиеСвойства(ФайлСвойства);
		
		СтрКода1 = "" + КлассРус + "1." + СвойствоРус;
			
		Если СвойствоРус = "Родитель" Тогда
			Если(КлассАнгл = "TabPage") Тогда
				ТекстТеста = ТекстТеста + "
				|ПанельВкладок1 = Ф.ПанельВкладок();
				|ПанельВкладок1.Родитель = Форма1;
				|Вкладка1.Родитель = ПанельВкладок1;
				|";
			// // // // ИначеЕсли(КлассАнгл = "TreeNode") Тогда
				// // // // ТекстТеста = ТекстТеста + "";
			ИначеЕсли(КлассАнгл = "Form") Тогда
				ТекстТеста = ТекстТеста + "";
			ИначеЕсли(КлассАнгл = "MenuItem") Тогда
				ТекстТеста = ТекстТеста + "";
			Иначе
				ТекстТеста = ТекстТеста + "
				|" + КлассРус + "1.Родитель = Форма1;
				|";
			КонецЕсли;
		КонецЕсли;
		
		Если СвойствоРус = "ФоновоеИзображение" Тогда
			ТекстТеста = ТекстТеста + "
			|СтрСтрелкаВлево = ""iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAMPSURBVFhH7ZftS1NhGMb9ZyKIQgxRTDFFE0VQISQUNCXTbSm+TpR8Kf2SrAxUFDGMENIwbUPnROfL1Pn+bkM0NSuUXE0NJPx29dwDTz3ucTu+pH3oww92zn12Xdd27nM/53F7rNHgIvk3AkTFxp47UoDDhbtKJR6VlaGEFc8S0iTtw35SgLiUFFiWl/Fzf/+vQh7k5RBgfHYWP/b2zgXy4gLEJiXBurNj54vVio+bm1g7Y0iTtA98yFMKkFtcjM9bW7CsrWF+ZUUWgxMTeNXUJKw5gzzIizylAGp28H51FbPs/sihx2zGnYQEPK+pEdZdQV7kKQVIz8/HzNKSLAx9fYiKiUFIVBSeVlUJr5EDeUoBHqjVmFpcdIm2sxPh0dEIjoiwcz8tDZrKSqeY2K0SaZEnF2DCYnFKk1aLW5GRCAwPPxb6nh6hHhdAlZODsYWFI3nZ2IibYWHwDw3loHOuaDcahZrkyQUYmZsTUl1fD7+QkBOj6+oS6nIBlNnZMM/MOKCpqIBPUJBsbgQHO/CO9Y1Imzy5AINTUxwVtbXwCgiAd2DgqWjt6HDQJhwCDExOSozNz+MrGxYxiYnw9Pc/FW9ZgD+1D+ACKLKy0D8+zkEhvtlsSFAo4OHry3Hdz082zW1tDtoEeXIBekdHHTBPT8O2uwtFejrcfXxOxBudTqjNBUjJzIRxeFiIiaW1scUjKy8PV728hFzz9j4Smh8iXfLkAnQNDR1J78gIvm9vo7C0FFc8PY/F69ZWoSYXIJkddA4MOIW+ZGU98aS8HJc9POyk0QBjo1YIazSCwov0yPN3gIwMdPT3u8RgMmGTPR3VdXW45O6O3MJC4XVyIE8pADVEO1vl9DL5tLGBBjae1QUFwroryEtqwttxcVCyhaFZr0cbWzjk8mF9HZNspIpqriAvFfOMjo+HW6JKZW+IF+wXNbS0oMVggJbNb113t0uM7MVEdF4EaZI2eZAXDaJ7qalwe1hSgmT2nNNfchHYNya5RUXC4nkgbc2esbeXg8+nRbQxEV1H/N+cXnAADX4Bo1ztMEwHgc8AAAAASUVORK5CYII="";
			|" + КлассРус + "1.ФоновоеИзображение = Ф.Картинка(СтрСтрелкаВлево);
			|";
		КонецЕсли;
			
		Если СвойствоРус = "Изображение" Тогда
			ТекстТеста = ТекстТеста + "
			|СтрСтрелкаВлево = ""iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAMPSURBVFhH7ZftS1NhGMb9ZyKIQgxRTDFFE0VQISQUNCXTbSm+TpR8Kf2SrAxUFDGMENIwbUPnROfL1Pn+bkM0NSuUXE0NJPx29dwDTz3ucTu+pH3oww92zn12Xdd27nM/53F7rNHgIvk3AkTFxp47UoDDhbtKJR6VlaGEFc8S0iTtw35SgLiUFFiWl/Fzf/+vQh7k5RBgfHYWP/b2zgXy4gLEJiXBurNj54vVio+bm1g7Y0iTtA98yFMKkFtcjM9bW7CsrWF+ZUUWgxMTeNXUJKw5gzzIizylAGp28H51FbPs/sihx2zGnYQEPK+pEdZdQV7kKQVIz8/HzNKSLAx9fYiKiUFIVBSeVlUJr5EDeUoBHqjVmFpcdIm2sxPh0dEIjoiwcz8tDZrKSqeY2K0SaZEnF2DCYnFKk1aLW5GRCAwPPxb6nh6hHhdAlZODsYWFI3nZ2IibYWHwDw3loHOuaDcahZrkyQUYmZsTUl1fD7+QkBOj6+oS6nIBlNnZMM/MOKCpqIBPUJBsbgQHO/CO9Y1Imzy5AINTUxwVtbXwCgiAd2DgqWjt6HDQJhwCDExOSozNz+MrGxYxiYnw9Pc/FW9ZgD+1D+ACKLKy0D8+zkEhvtlsSFAo4OHry3Hdz082zW1tDtoEeXIBekdHHTBPT8O2uwtFejrcfXxOxBudTqjNBUjJzIRxeFiIiaW1scUjKy8PV728hFzz9j4Smh8iXfLkAnQNDR1J78gIvm9vo7C0FFc8PY/F69ZWoSYXIJkddA4MOIW+ZGU98aS8HJc9POyk0QBjo1YIazSCwov0yPN3gIwMdPT3u8RgMmGTPR3VdXW45O6O3MJC4XVyIE8pADVEO1vl9DL5tLGBBjae1QUFwroryEtqwttxcVCyhaFZr0cbWzjk8mF9HZNspIpqriAvFfOMjo+HW6JKZW+IF+wXNbS0oMVggJbNb113t0uM7MVEdF4EaZI2eZAXDaJ7qalwe1hSgmT2nNNfchHYNya5RUXC4nkgbc2esbeXg8+nRbQxEV1H/N+cXnAADX4Bo1ztMEwHgc8AAAAASUVORK5CYII="";
			|" + КлассРус + "1.Изображение = Ф.Картинка(СтрСтрелкаВлево);
			|";
		КонецЕсли;
		
		Если СвойствоРус = "ВыбраннаяВкладка" Тогда
			ТекстТеста = ТекстТеста + "
			|ПанельВкладок1.Вкладки.Добавить(Ф.Вкладка(""Вкладка1""));
			|ПанельВкладок1.Вкладки.Добавить(Ф.Вкладка(""Вкладка2""));
			|ПанельВкладок1.Вкладки.Добавить(Ф.Вкладка(""Вкладка3""));
			|ПанельВкладок1.ВыбраннаяВкладка = ПанельВкладок1.Вкладки.Элемент(1);
			|";
		КонецЕсли;
		
		ТекстТеста = ТекстТеста + "
		|Попытка";
		Если (СвойствоРус = "ИсточникДанных") и (КлассРус = "ПолеВыбора") Тогда
			ТекстТеста = ТекстТеста + "
			|		Сообщить(""ПолеВыбора1.ИсточникДанных = "" + ПолеВыбора1.ИсточникДанных + "" (Тип: "" + ПолеВыбора1.ИсточникДанных + "".)(Чтение и запись.)"");
			|";
		ИначеЕсли (СвойствоРус = "ИсточникДанных") и (КлассРус = "ПолеСписка") Тогда
			ТекстТеста = ТекстТеста + "
			|	Сообщить(""ПолеСписка1.ИсточникДанных = "" + ПолеСписка1.ИсточникДанных + "" (Тип: "" + ПолеСписка1.ИсточникДанных + "".)(Чтение и запись.)"");
			|";
		ИначеЕсли (СвойствоРус = "ВыбранноеЗначение") и (КлассРус = "ПолеВыбора") Тогда
			ТекстТеста = ТекстТеста + "
			|		Сообщить(""ПолеВыбора1.ВыбранноеЗначение = "" + ПолеВыбора1.ВыбранноеЗначение + "" (Тип: "" + ПолеВыбора1.ВыбранноеЗначение + "".)(Только чтение.)"");
			|";
		ИначеЕсли (СвойствоРус = "ВыбранноеЗначение") и (КлассРус = "ПолеСписка") Тогда
			ТекстТеста = ТекстТеста + "
			|		Сообщить(""ПолеСписка1.ВыбранноеЗначение = "" + ПолеСписка1.ВыбранноеЗначение + "" (Тип: "" + ПолеСписка1.ВыбранноеЗначение + "".)(Только чтение.)"");
			|";
		ИначеЕсли СвойствоРус = "КонтекстноеМеню" Тогда
			ТекстТеста = ТекстТеста + "
			|	КонтекстноеМеню1 = Ф.КонтекстноеМеню();
			|	КонтекстноеМеню1.ПриПоявлении = ""КонтекстноеМеню1_ПриПоявлении()""; // обязательно присвоить свойству значение и назначить процедуру
			|	ЭлементМеню1 = КонтекстноеМеню1.ЭлементыМеню.Добавить(Ф.ЭлементМеню(""Первый элемент меню""));
			|	ЭлементМеню2 = КонтекстноеМеню1.ЭлементыМеню.Добавить(Ф.ЭлементМеню(""Второй элемент меню""));
			|	" + КлассРус + "1.КонтекстноеМеню = КонтекстноеМеню1;
			|	Сообщить(""" + КлассРус + "1.КонтекстноеМеню = "" + " + КлассРус + "1.КонтекстноеМеню + """ + " (" + ТипСвойства + ")(" + ИспользованиеСвойства + ")"");
			|";
		ИначеЕсли СвойствоРус = "СписокИзображений" Тогда
			ТекстТеста = ТекстТеста + "
			|    Стр = ""Qk02DAAAAAAAADYAAAAoAAAAIAAAACAAAAABABgAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAA"";
			|    Для А = 1 По 1184 Цикл Стр = Стр + ""/""; КонецЦикла;
			|    Для А = 1 По 16 Цикл Стр = Стр + ""AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/AAD/////////////////////////////////////////////////////""; КонецЦикла;
			|    Для А = 1 По 864 Цикл Стр = Стр + ""/""; КонецЦикла;
			|    Картинка1 = Ф.Картинка(Стр);
			|    СписокИзображений1 = Ф.СписокИзображений();
			|    СписокИзображений1.РазмерИзображения = Ф.Размер(75, 50);
			|    " + КлассРус + "1.СписокИзображений = СписокИзображений1;
			|    Сообщить(""" + КлассРус + "1.СписокИзображений = "" + " + КлассРус + "1.СписокИзображений + """ + " (" + ТипСвойства + ")(" + ИспользованиеСвойства + ")"");
			|";
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			

			
			
			
		Иначе
			Если (СтрНайти(ТипСвойства, "Произвольный") > 0) Тогда
				Если ИспользованиеСвойства = "Чтение и запись." Тогда
					ТекстТеста = ТекстТеста + "
					|	" + СтрКода1 + " = " + СтрКода1 + ";
					|	";
				ИначеЕсли ИспользованиеСвойства = "Только чтение." Тогда
				Иначе
					Сообщить("ИспользованиеСвойства = " + ИспользованиеСвойства);
					ЗавершитьРаботу(11);
				КонецЕсли;
				Если Не (ИмяПеречисления = "") Тогда
					ТекстТеста = ТекстТеста + "
					|	Сообщить(""" + СтрКода1 + " = "" + " + СтрКода1 + " + "" (Тип: " + ИмяПеречисления + ".)(" + ИспользованиеСвойства + ")"");
					|";
				Иначе
					ТекстТеста = ТекстТеста + "
					|	Сообщить(""" + СтрКода1 + " = "" + " + СтрКода1 + " + "" (Тип: "" + " + СтрКода1 + ".Тип.ВСтроку() + "" ("" + " + СтрКода1 + ".Type.ВСтроку() + """ + ").)(" + ИспользованиеСвойства + ")"");
					|";
				КонецЕсли;
			Иначе
				Если ИспользованиеСвойства = "Чтение и запись." Тогда
					ТекстТеста = ТекстТеста + "
					|	" + СтрКода1 + " = " + СтрКода1 + ";
					|	";
				ИначеЕсли ИспользованиеСвойства = "Только чтение." Тогда
				Иначе
					Сообщить("ИспользованиеСвойства = " + ИспользованиеСвойства);
					ЗавершитьРаботу(11);
				КонецЕсли;
				ТекстТеста = ТекстТеста + "
				|	Сообщить(""" + СтрКода1 + " = "" + " + СтрКода1 + " + "" (" + ТипСвойства + ")(" + ИспользованиеСвойства + ")"");
				|";
			КонецЕсли;
		КонецЕсли;
		ТекстТеста = ТекстТеста + "
		|Исключение НекорректныеСвойства.Добавить(""" + СвойствоРусАнгл + """); КонецПопытки;
		|";
		
	КонецЦикла;
	Возврат МассивСвойств;
КонецФункции

Функция МассивСвойств(ИмяФайлаЧленов)
	М = Новый Массив;
	Сообщить("" + ИмяФайлаЧленов);
	// Если (ИмяФайлаЧленов = "C:\444\OneScriptFormsru\OneScriptForms.BitmapDataMembers.html") или
		// (ИмяФайлаЧленов = "C:\444\OneScriptFormsru\OneScriptForms.BrushMembers.html") или
		// (ИмяФайлаЧленов = "C:\444\OneScriptFormsru\OneScriptForms.EventArgsMembers.html") Тогда
		// Возврат М;
	// КонецЕсли;
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ИмяФайлаЧленов);
	Стр = ТекстДок.ПолучитьТекст();
	СтрТаблица = СтрНайтиМежду(Стр, "<H4 class=dtH4>Свойства</H4>", "</TBODY></TABLE>", Ложь, );
	
	Если СтрТаблица.Количество() = 0 Тогда
		Возврат М;
	КонецЕсли;
	
	М2 = СтрНайтиМежду(СтрТаблица[0], "pubproperty.gif", "</TD>", Ложь, );
	Для А = 0 По М2.ВГраница() Цикл
		Если Не (СтрНайти(М2[А], "унаследовано") > 0) Тогда
			Продолжить;
		КонецЕсли;
		
		ФайлСвойства = СтрНайтиМежду(М2[А], "<A href=""OneScriptForms.", ".html"">", , );
		ФайлСвойства = "C:\444\OneScriptFormsru\OneScriptForms." + ФайлСвойства[0] + ".html";
		
		СтрХ = М2[А];
		СтрХ = СтрЗаменить(СтрХ, "&nbsp;", " ");
		СвойствоАнгл = СтрНайтиМежду(СтрХ, "(", ")", , )[0];
		СвойствоРус = СтрНайтиМежду(СтрХ, ".html"">", " (", , )[0];
		
		М1 = Новый Массив;
		М1.Добавить(ФайлСвойства);
		М1.Добавить(СвойствоАнгл);
		М1.Добавить(СвойствоРус);
		М1.Добавить(СвойствоРус + " (" + СвойствоАнгл + ")");
		М.Добавить(М1);
	КонецЦикла;
	Возврат М;
КонецФункции


Функция МетодыТест(ИмяФайлаЧленов, КлассРус, КлассАнгл)
	МассивМетодов = МассивМетодов(ИмяФайлаЧленов);
	Если МассивМетодов.Количество() > 0 Тогда
		СписокСообщений.Добавить("---Методы---(" + МассивМетодов.Количество() + ")");
		// Сообщить("===" + КлассРус + "=====================================================================");
		Для А = 0 По МассивМетодов.ВГраница() Цикл
			ФайлМетода   = МассивМетодов[А][0];
			МетодАнгл    = МассивМетодов[А][1];
			МетодРус     = МассивМетодов[А][2];
			МетодРусАнгл = МассивМетодов[А][3];
			СписокСообщений.Добавить("" + Символы.Таб + МетодРусАнгл);
			
			Параметры = Параметры(ФайлМетода);
			// Сообщить("Параметры = " + Параметры);
			
			ВозвращаемоеЗначение = ВозвращаемоеЗначение(ФайлМетода);
			// Сообщить("ВозвращаемоеЗначение = " + ВозвращаемоеЗначение);
			
			Если Параметры = "" Тогда // параметров нет
				СтрКода4 = "" + КлассРус + "1." + МетодРус + "()";
				// Сообщить("СтрКода4 = " + СтрКода4);
				Если ВозвращаемоеЗначение = "" Тогда // возвращаемого значения нет
					// Сообщить("СтрКода4 = " + СтрКода4);
					
				Иначе // возвращаемое значение есть
					
				КонецЕсли;
			Иначе // параметры есть
				Если ВозвращаемоеЗначение = "" Тогда // возвращаемого значения нет
					
				Иначе // возвращаемое значение есть
					
				КонецЕсли;
			КонецЕсли;
			
			
			
			

		
		
		
		
		
		
		
		
		КонецЦикла;
	Иначе
		СписокСообщений.Добавить("---Методы---(0)");
	КонецЕсли;
КонецФункции

Функция ВозвращаемоеЗначение(ФайлМетода);
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ФайлМетода);
	Стр = ТекстДок.ПолучитьТекст();
	Стр = СтрНайтиМежду(Стр, "<H4 class=dtH4>Возвращаемое значение</H4>", "<H4 class=dtH4>Описание</H4>", Ложь, );
	Стр = СтрНайтиМежду(Стр[0], "<P>", "</P>", , );
	Стр = Стр[0];
	// ВозвращаемоеЗначение = СтрЗаменить(Стр, """", """""");
	ВозвращаемоеЗначение = Стр;
	Возврат ВозвращаемоеЗначение;
КонецФункции

Функция Параметры(ФайлМетода);
	Сообщить("" + ФайлМетода);
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ФайлМетода);
	Стр = ТекстДок.ПолучитьТекст();
	Стр = СтрНайтиМежду(Стр, "<H4 class=dtH4>Параметры</H4>", "<H4 class=dtH4>Возвращаемое значение</H4>", Ложь, );
	Стр = СтрНайтиМежду(Стр[0], "<DL>", "</DL>", , );
	Стр = Стр[0];
	// Параметры = СтрЗаменить(Стр, """", """""");
	Параметры = Стр;
	Возврат Параметры;
КонецФункции

Функция МассивМетодов(ИмяФайлаЧленов)
	М = Новый Массив;
	// Если (ИмяФайлаЧленов = "C:\444\OneScriptFormsru\OneScriptForms.BitmapDataMembers.html") или
		// (ИмяФайлаЧленов = "C:\444\OneScriptFormsru\OneScriptForms.BrushMembers.html") или
		// (ИмяФайлаЧленов = "C:\444\OneScriptFormsru\OneScriptForms.EventArgsMembers.html") Тогда
		// Возврат М;
	// КонецЕсли;
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ИмяФайлаЧленов);
	Стр10 = ТекстДок.ПолучитьТекст();
	СтрТаблица = СтрНайтиМежду(Стр10, "<H4 class=dtH4>Методы</H4>", "</TBODY></TABLE>", Ложь, );
	Если СтрТаблица.Количество() > 0 Тогда
		Массив6 = СтрНайтиМежду(СтрТаблица[0], "pubmethod.gif", "</A>", Ложь, );
		Для А = 0 По Массив6.ВГраница() Цикл
			ФайлМетода = СтрНайтиМежду(Массив6[А], "<A href=""OneScriptForms.", ".html"">", , );
			ФайлМетода = "C:\444\OneScriptFormsru\OneScriptForms." + ФайлМетода[0] + ".html";
			
			СтрХ = Массив6[А];
			СтрХ = СтрЗаменить(СтрХ, "&nbsp;", " ");
			МетодАнгл = СтрНайтиМежду(СтрХ, "(", ")", , )[0];
			МетодРус = СтрНайтиМежду(СтрХ, ".html"">", " (", , )[0];
			
			М1 = Новый Массив;
			М1.Добавить(ФайлМетода);
			М1.Добавить(МетодАнгл);
			М1.Добавить(МетодРус);
			М1.Добавить(МетодРус + " (" + МетодАнгл + ")");
			М.Добавить(М1);
		КонецЦикла;
	КонецЕсли;
	Возврат М;
КонецФункции

Функция ПеречисленияТест();
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать("C:\444\OneScriptFormsru\OneScriptForms.html");
	Стр12 = ТекстДок.ПолучитьТекст();
	Массив7 = СтрНайтиМежду(Стр12, "<H3 class=dtH3>Перечисления</H3>", "</TBODY></TABLE>", Ложь, );
	Массив8 = СтрНайтиМежду(Массив7[0], "Описание</TH></TR>", "</TBODY></TABLE>", Ложь, );
	Массив9 = СтрНайтиМежду(Массив8[0], "<TR vAlign=top>", "</TD></TR>", Ложь, );
	СписокСообщений.Добавить("Перечислений = " + Массив9.Количество());
	СписокСообщений.Добавить("===============================");
	Для А1 = 0 По Массив9.ВГраница() Цикл
		Массив10 = СтрНайтиМежду(Массив9[А1], ".html"">", "</A></TD>", Ложь, );
		Для А = 0 По Массив10.ВГраница() Цикл
			ТекстТеста = 
			"ПодключитьВнешнююКомпоненту(""C:\444\111\OneScriptForms\OneScriptForms\bin\Debug\OneScriptForms.dll"");
			|Ф = Новый ФормыДляОдноСкрипта();
			|Форма1 = Ф.Форма();
			|Форма1.Отображать = Истина;
			|Форма1.Показать();
			|";
			
			СтрХ = Массив10[А];
			СтрХ = СтрЗаменить(СтрХ, "&nbsp;", " ");
			ПеречислениеАнгл = СтрНайтиМежду(СтрХ, "(", ")", , )[0];
			ПеречислениеРус = СтрНайтиМежду(СтрХ, ".html"">", " (", , )[0];
			СписокСообщений.Добавить("===Перечисление===");
			СписокСообщений.Добавить("" + ПеречислениеРус + " (" + ПеречислениеАнгл + ")");
			//находим перечисления из файла OneScriptForms....(Перечисление)......html
			ИмяФайлаПеречисления = "C:\444\OneScriptFormsru\OneScriptForms." + ПеречислениеАнгл + ".html";
			ПеречислениеТест(ИмяФайлаПеречисления, ПеречислениеРус, ПеречислениеАнгл);
			
			ТекстТеста = ТекстТеста + "
			|Форма1.Текст = ""Тест " + ПеречислениеРус + "(" + ПеречислениеАнгл + ")"";
			|Пока Ф.Продолжать Цикл
			|	Выполнить(Ф.ПолучитьСобытие());
			|КонецЦикла;
			|";
			ТекстДокХХХ = Новый ТекстовыйДокумент;
			ТекстДокХХХ.УстановитьТекст(ТекстТеста);
			ТекстДокХХХ.Записать("C:\444\Тестирование\" + ПеречислениеРус + "(" + ПеречислениеАнгл + ").os");
		КонецЦикла;
	КонецЦикла;
КонецФункции

Функция ПеречислениеТест(ИмяФайлаПеречисления, ПеречислениеРус, ПеречислениеАнгл)
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ИмяФайлаПеречисления);
	Стр10 = ТекстДок.ПолучитьТекст();
	СтрТаблица = СтрНайтиМежду(Стр10, "<TD><B>", "</B></TD>", Ложь, );
	СписокСообщений.Добавить("---Перечисления---(" + СтрТаблица.Количество() + ")");
	Для А = 0 По СтрТаблица.ВГраница() Цикл
		СтрХ = СтрТаблица[А];
		СтрХ = СтрЗаменить(СтрХ, "&nbsp;", " ");
		ЗначениеПеречисленияАнгл = СтрНайтиМежду(СтрХ, "(", ")", , )[0];
		ЗначениеПеречисленияРус = СтрНайтиМежду(СтрХ, "<TD><B>", " (", , )[0];
		СписокСообщений.Добавить("" + Символы.Таб + ЗначениеПеречисленияРус + " (" + ЗначениеПеречисленияАнгл + ")");
		СтрКода1 = "Ф." + ПеречислениеРус + "." + ЗначениеПеречисленияРус;
		ТекстТеста = ТекстТеста + "
		|Сообщить(""" + СтрКода1 + " = "" + " + СтрКода1 + ");
		|";
	КонецЦикла;
КонецФункции


Функция ИспользованиеСвойства(ФайлСвойства)
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ФайлСвойства);
	Стр = ТекстДок.ПолучитьТекст();
	Стр = СтрНайтиМежду(Стр, "<H4 class=dtH4>Использование</H4>", "<H4 class=dtH4>Значение</H4>", Ложь, );
	Стр = СтрНайтиМежду(Стр[0], "<P>", "</P>", , );
	Стр = Стр[0];
	ИспользованиеСвойства = СтрЗаменить(Стр, """", """""");
	Возврат ИспользованиеСвойства;
КонецФункции

Функция ТипСвойства(ФайлСвойства)
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ФайлСвойства);
	Стр = ТекстДок.ПолучитьТекст();
	Стр = СтрНайтиМежду(Стр, "<H4 class=dtH4>Значение</H4>", "<H4 class=dtH4>Примечание</H4>", Ложь, );
	Стр = СтрНайтиМежду(Стр[0], "<P>", "</P>", , );
	М = СтрНайтиМежду(Стр[0], ">", "<", , );
	Если М.Количество() > 0 Тогда
		Стр = М[0];
		Стр = "Тип: " + СтрЗаменить(Стр, "&nbsp;", " ");
	Иначе
		Стр = Стр[0];
	КонецЕсли;
	ТипСвойства = СтрЗаменить(Стр, """", """""");
	Возврат ТипСвойства;
КонецФункции

Функция ИмяПеречисления(ФайлСвойства)
	ИмяПеречисления = "";
	Стр = "";
	ТекстДок = Новый ТекстовыйДокумент;
	ТекстДок.Прочитать(ФайлСвойства);
	Стр = ТекстДок.ПолучитьТекст();
	Стр = СтрНайтиМежду(Стр, "<H4 class=dtH4>Значение</H4>", "<H4 class=dtH4>Примечание</H4>", Ложь, );
	Стр = СтрНайтиМежду(Стр[0], "OneScriptForms.", ".html", , );
	Если Стр.Количество() > 0 Тогда
		//открываем файл типа свойства и смотрим в заголовке слово Перечисление
		ТекстДок2 = Новый ТекстовыйДокумент;
		ТекстДок2.Прочитать("C:\444\OneScriptFormsru\OneScriptForms." + Стр[0] + ".html");
		Стр2 = ТекстДок2.ПолучитьТекст();
		СтрЗаголовка = СтрНайтиМежду(Стр2, "<H1 class=dtH1>", "</H1>", , )[0];
		Если СтрНайти(СтрЗаголовка, "Перечисление") > 0 Тогда
			// <H1 class=dtH1>СостояниеОкнаФормы (FormWindowState) Перечисление</H1></DIV></DIV>
			ИмяПеречисления = СтрЗаменить(СтрЗаголовка, "&nbsp;", " ");
			ИмяПеречисления = СтрЗаменить(СтрЗаголовка, "Перечисление", "");
			ИмяПеречисления = СокрЛП(ИмяПеречисления);
		КонецЕсли;
	КонецЕсли;
	Возврат ИмяПеречисления;
КонецФункции

Таймер = ТекущаяУниверсальнаяДатаВМиллисекундах();

ПодключитьВнешнююКомпоненту("C:\444\111\OneScriptForms\OneScriptForms\bin\Debug\OneScriptForms.dll");

Ф = Новый ФормыДляОдноСкрипта();

Тестирование();

Форма1 = Ф.Форма();
Форма1.Ширина = 800;
Форма1.Высота = 600;
Форма1.Отображать = Истина;
Форма1.Показать();

ПолеВвода1 = Форма1.ЭлементыУправления.Добавить(Ф.ПолеВвода());
ПолеВвода1.МногострочныйРежим = Истина;
ПолеВвода1.Стыковка = Ф.СтильСтыковки.Заполнение;
ПолеВвода1.ЦветФона = Ф.Цвет().Черный;
ПолеВвода1.ОсновнойЦвет = Ф.Цвет().БледноЗеленый;
ПолеВвода1.ПолосыПрокрутки = Ф.ПолосыПрокрутки.Обе;
ПолеВвода1.ПринятиеВозврат = Истина;
ПолеВвода1.РегистрСимволов = Ф.РегистрСимволов.Стандартный;

СписокОшибок = Новый СписокЗначений();

ВыбранныеФайлы = НайтиФайлы("C:\444\ТестированиеВсех", "*.os", Истина);

ТекстДокХХХ = Новый ТекстовыйДокумент;
ТекстДокХХХ.Прочитать("C:\444\ОшибкиТестаСвойств.txt");
ТекстДокХХХ.Очистить();
ТекстДокХХХ.Записать("C:\444\ОшибкиТестаСвойств.txt");
КолТестируемыхКлассов = 0;
Для А = 0 По ВыбранныеФайлы.ВГраница() Цикл
	КолТестируемыхКлассов = КолТестируемыхКлассов + 1;
	Если 
		(ВыбранныеФайлы[А].Имя = "ДеревоОтменаАрг(TreeViewCancelEventArgs).os") или 
		(ВыбранныеФайлы[А].Имя = "ПереименованиеАрг(RenamedEventArgs).os") Тогда
	Иначе
		Сообщить(" (" + Ф.Математика().Окр(((ТекущаяУниверсальнаяДатаВМиллисекундах() - Таймер)/1000)/60, 2) + " мин." + " " + КолТестируемыхКлассов + " из " + ВыбранныеФайлы.Количество() + ")" + 
				"""C:\Program Files (x86)\OneScript\bin\oscript.exe"" " + ВыбранныеФайлы[А].ПолноеИмя);
		Команда("""C:\Program Files (x86)\OneScript\bin\oscript.exe""", ВыбранныеФайлы[А].ПолноеИмя, ПолеВвода1);
	КонецЕсли;
	Форма1.Фокус();
КонецЦикла;

Для А = 0 По СписокОшибок.Количество() - 1 Цикл
	Сообщить("" + СписокОшибок.Получить(А).Значение);
КонецЦикла;

Сообщить("Ошибок = " + СписокОшибок.Количество());
Сообщить("Протестированио классов = " + КолТестируемыхКлассов);
Сообщить("Выполнено за: " + ((ТекущаяУниверсальнаяДатаВМиллисекундах()-Таймер)/1000)/60 + " мин." + " " + ТекущаяДата());

Форма1.Текст = "Общий Тест Свойств";
Пока Ф.Продолжать Цикл
	Выполнить(Ф.ПолучитьСобытие());
КонецЦикла;
